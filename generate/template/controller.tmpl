{{if .IsControllerFile}}package controllers

import (
    "github.com/gin-gonic/gin"
    "{{.ProjectName}}/common/errorz"
    "{{.ProjectName}}/global"
	"{{.ProjectName}}/services"
	"{{.ProjectName}}/model/req"
)

type {{.GroupName}}Controller struct {
}
{{end}}

//	@Summary	{{.Swagger.Summary}}
//	@Tags {{.Swagger.Tags}}
//	@Produce	{{.Swagger.Produce}}
{{range .Swagger.Params}}// @Param {{.Name}} {{.ParamType}} {{.DataType}} {{.IsNeed}} {{if .Description}}"{{.Description}}"{{else}}" "{{end}}
{{end}}// @Response	200	{object}	resp.Response{{if .RespModel}}{data=resp.{{.FunName}}Resp}{{end}}
//	@Router		{{.Router}} [{{.Method}}]
func (u *{{.GroupName}}Controller) {{.FunName}}(c *gin.Context) {
	{{if .ReqModel}}var params req.{{.ReqModel}}
    if err := c.ShouldBind(&params); err != nil {
    	OutputError(c, errorz.CodeError(errorz.RESP_PARAM_ERR, err))
    	return
    }{{end}}
    {{.LowerGroupName}}Service := services.New{{.GroupName}}Service(global.GetContext(c))
    {{if .RespModel}}data, {{end}}err := {{.LowerGroupName}}Service.{{.FunName}}({{if .ReqModel}}&params{{end}})
    if err != nil {
    	OutputError(c, err)
    	return
    }
    OutputSuccess(c, {{if .RespModel}}data{{else}}nil{{end}})
}
